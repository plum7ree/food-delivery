/**
 * Autogenerated by Avro
 * <p>
 * DO NOT EDIT DIRECTLY
 */
package com.example.kafka.avro.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class CouponIssueRequestAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5744070665905948375L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CouponIssueRequestAvroModel\",\"namespace\":\"com.example.kafka.avro.model\",\"fields\":[{\"name\":\"issueId\",\"type\":{\"type\":\"long\",\"logicalType\":\"long\"}},{\"name\":\"callerId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"couponId\",\"type\":{\"type\":\"long\",\"logicalType\":\"uuid\"}},{\"name\":\"amount\",\"type\":{\"type\":\"long\",\"logicalType\":\"long\",\"default\":1}},{\"name\":\"createdAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}}]}");

  public static org.apache.avro.Schema getClassSchema() {
    return SCHEMA$;
  }

  private static SpecificData MODEL$ = new SpecificData();

  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<CouponIssueRequestAvroModel> ENCODER =
      new BinaryMessageEncoder<CouponIssueRequestAvroModel>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CouponIssueRequestAvroModel> DECODER =
      new BinaryMessageDecoder<CouponIssueRequestAvroModel>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   *
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CouponIssueRequestAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   *
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CouponIssueRequestAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   *
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CouponIssueRequestAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CouponIssueRequestAvroModel>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CouponIssueRequestAvroModel to a ByteBuffer.
   *
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CouponIssueRequestAvroModel from a ByteBuffer.
   *
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CouponIssueRequestAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CouponIssueRequestAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private long issueId;
  private java.lang.CharSequence callerId;
  private long couponId;
  private long amount;
  private java.time.Instant createdAt;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CouponIssueRequestAvroModel() {
  }

  /**
   * All-args constructor.
   *
   * @param issueId   The new value for issueId
   * @param callerId  The new value for callerId
   * @param couponId  The new value for couponId
   * @param amount    The new value for amount
   * @param createdAt The new value for createdAt
   */
  public CouponIssueRequestAvroModel(java.lang.Long issueId, java.lang.CharSequence callerId, java.lang.Long couponId, java.lang.Long amount, java.time.Instant createdAt) {
    this.issueId = issueId;
    this.callerId = callerId;
    this.couponId = couponId;
    this.amount = amount;
    this.createdAt = createdAt.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  public org.apache.avro.specific.SpecificData getSpecificData() {
    return MODEL$;
  }

  public org.apache.avro.Schema getSchema() {
    return SCHEMA$;
  }

  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
      case 0:
        return issueId;
      case 1:
        return callerId;
      case 2:
        return couponId;
      case 3:
        return amount;
      case 4:
        return createdAt;
      default:
        throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[]{
          null,
          null,
          null,
          null,
          new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
          null
      };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value = "unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
      case 0:
        issueId = (java.lang.Long) value$;
        break;
      case 1:
        callerId = (java.lang.CharSequence) value$;
        break;
      case 2:
        couponId = (java.lang.Long) value$;
        break;
      case 3:
        amount = (java.lang.Long) value$;
        break;
      case 4:
        createdAt = (java.time.Instant) value$;
        break;
      default:
        throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'issueId' field.
   *
   * @return The value of the 'issueId' field.
   */
  public long getIssueId() {
    return issueId;
  }


  /**
   * Sets the value of the 'issueId' field.
   *
   * @param value the value to set.
   */
  public void setIssueId(long value) {
    this.issueId = value;
  }

  /**
   * Gets the value of the 'callerId' field.
   *
   * @return The value of the 'callerId' field.
   */
  public java.lang.CharSequence getCallerId() {
    return callerId;
  }


  /**
   * Sets the value of the 'callerId' field.
   *
   * @param value the value to set.
   */
  public void setCallerId(java.lang.CharSequence value) {
    this.callerId = value;
  }

  /**
   * Gets the value of the 'couponId' field.
   *
   * @return The value of the 'couponId' field.
   */
  public long getCouponId() {
    return couponId;
  }


  /**
   * Sets the value of the 'couponId' field.
   *
   * @param value the value to set.
   */
  public void setCouponId(long value) {
    this.couponId = value;
  }

  /**
   * Gets the value of the 'amount' field.
   *
   * @return The value of the 'amount' field.
   */
  public long getAmount() {
    return amount;
  }


  /**
   * Sets the value of the 'amount' field.
   *
   * @param value the value to set.
   */
  public void setAmount(long value) {
    this.amount = value;
  }

  /**
   * Gets the value of the 'createdAt' field.
   *
   * @return The value of the 'createdAt' field.
   */
  public java.time.Instant getCreatedAt() {
    return createdAt;
  }


  /**
   * Sets the value of the 'createdAt' field.
   *
   * @param value the value to set.
   */
  public void setCreatedAt(java.time.Instant value) {
    this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Creates a new CouponIssueRequestAvroModel RecordBuilder.
   *
   * @return A new CouponIssueRequestAvroModel RecordBuilder
   */
  public static com.example.kafka.avro.model.CouponIssueRequestAvroModel.Builder newBuilder() {
    return new com.example.kafka.avro.model.CouponIssueRequestAvroModel.Builder();
  }

  /**
   * Creates a new CouponIssueRequestAvroModel RecordBuilder by copying an existing Builder.
   *
   * @param other The existing builder to copy.
   * @return A new CouponIssueRequestAvroModel RecordBuilder
   */
  public static com.example.kafka.avro.model.CouponIssueRequestAvroModel.Builder newBuilder(com.example.kafka.avro.model.CouponIssueRequestAvroModel.Builder other) {
    if (other == null) {
      return new com.example.kafka.avro.model.CouponIssueRequestAvroModel.Builder();
    } else {
      return new com.example.kafka.avro.model.CouponIssueRequestAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new CouponIssueRequestAvroModel RecordBuilder by copying an existing CouponIssueRequestAvroModel instance.
   *
   * @param other The existing instance to copy.
   * @return A new CouponIssueRequestAvroModel RecordBuilder
   */
  public static com.example.kafka.avro.model.CouponIssueRequestAvroModel.Builder newBuilder(com.example.kafka.avro.model.CouponIssueRequestAvroModel other) {
    if (other == null) {
      return new com.example.kafka.avro.model.CouponIssueRequestAvroModel.Builder();
    } else {
      return new com.example.kafka.avro.model.CouponIssueRequestAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for CouponIssueRequestAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CouponIssueRequestAvroModel>
      implements org.apache.avro.data.RecordBuilder<CouponIssueRequestAvroModel> {

    private long issueId;
    private java.lang.CharSequence callerId;
    private long couponId;
    private long amount;
    private java.time.Instant createdAt;

    /**
     * Creates a new Builder
     */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     *
     * @param other The existing Builder to copy.
     */
    private Builder(com.example.kafka.avro.model.CouponIssueRequestAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.issueId)) {
        this.issueId = data().deepCopy(fields()[0].schema(), other.issueId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.callerId)) {
        this.callerId = data().deepCopy(fields()[1].schema(), other.callerId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.couponId)) {
        this.couponId = data().deepCopy(fields()[2].schema(), other.couponId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.amount)) {
        this.amount = data().deepCopy(fields()[3].schema(), other.amount);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[4].schema(), other.createdAt);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing CouponIssueRequestAvroModel instance
     *
     * @param other The existing instance to copy.
     */
    private Builder(com.example.kafka.avro.model.CouponIssueRequestAvroModel other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.issueId)) {
        this.issueId = data().deepCopy(fields()[0].schema(), other.issueId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.callerId)) {
        this.callerId = data().deepCopy(fields()[1].schema(), other.callerId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.couponId)) {
        this.couponId = data().deepCopy(fields()[2].schema(), other.couponId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.amount)) {
        this.amount = data().deepCopy(fields()[3].schema(), other.amount);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[4].schema(), other.createdAt);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Gets the value of the 'issueId' field.
     *
     * @return The value.
     */
    public long getIssueId() {
      return issueId;
    }


    /**
     * Sets the value of the 'issueId' field.
     *
     * @param value The value of 'issueId'.
     * @return This builder.
     */
    public com.example.kafka.avro.model.CouponIssueRequestAvroModel.Builder setIssueId(long value) {
      validate(fields()[0], value);
      this.issueId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
     * Checks whether the 'issueId' field has been set.
     *
     * @return True if the 'issueId' field has been set, false otherwise.
     */
    public boolean hasIssueId() {
      return fieldSetFlags()[0];
    }


    /**
     * Clears the value of the 'issueId' field.
     *
     * @return This builder.
     */
    public com.example.kafka.avro.model.CouponIssueRequestAvroModel.Builder clearIssueId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
     * Gets the value of the 'callerId' field.
     *
     * @return The value.
     */
    public java.lang.CharSequence getCallerId() {
      return callerId;
    }


    /**
     * Sets the value of the 'callerId' field.
     *
     * @param value The value of 'callerId'.
     * @return This builder.
     */
    public com.example.kafka.avro.model.CouponIssueRequestAvroModel.Builder setCallerId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.callerId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
     * Checks whether the 'callerId' field has been set.
     *
     * @return True if the 'callerId' field has been set, false otherwise.
     */
    public boolean hasCallerId() {
      return fieldSetFlags()[1];
    }


    /**
     * Clears the value of the 'callerId' field.
     *
     * @return This builder.
     */
    public com.example.kafka.avro.model.CouponIssueRequestAvroModel.Builder clearCallerId() {
      callerId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
     * Gets the value of the 'couponId' field.
     *
     * @return The value.
     */
    public long getCouponId() {
      return couponId;
    }


    /**
     * Sets the value of the 'couponId' field.
     *
     * @param value The value of 'couponId'.
     * @return This builder.
     */
    public com.example.kafka.avro.model.CouponIssueRequestAvroModel.Builder setCouponId(long value) {
      validate(fields()[2], value);
      this.couponId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
     * Checks whether the 'couponId' field has been set.
     *
     * @return True if the 'couponId' field has been set, false otherwise.
     */
    public boolean hasCouponId() {
      return fieldSetFlags()[2];
    }


    /**
     * Clears the value of the 'couponId' field.
     *
     * @return This builder.
     */
    public com.example.kafka.avro.model.CouponIssueRequestAvroModel.Builder clearCouponId() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
     * Gets the value of the 'amount' field.
     *
     * @return The value.
     */
    public long getAmount() {
      return amount;
    }


    /**
     * Sets the value of the 'amount' field.
     *
     * @param value The value of 'amount'.
     * @return This builder.
     */
    public com.example.kafka.avro.model.CouponIssueRequestAvroModel.Builder setAmount(long value) {
      validate(fields()[3], value);
      this.amount = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
     * Checks whether the 'amount' field has been set.
     *
     * @return True if the 'amount' field has been set, false otherwise.
     */
    public boolean hasAmount() {
      return fieldSetFlags()[3];
    }


    /**
     * Clears the value of the 'amount' field.
     *
     * @return This builder.
     */
    public com.example.kafka.avro.model.CouponIssueRequestAvroModel.Builder clearAmount() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
     * Gets the value of the 'createdAt' field.
     *
     * @return The value.
     */
    public java.time.Instant getCreatedAt() {
      return createdAt;
    }


    /**
     * Sets the value of the 'createdAt' field.
     *
     * @param value The value of 'createdAt'.
     * @return This builder.
     */
    public com.example.kafka.avro.model.CouponIssueRequestAvroModel.Builder setCreatedAt(java.time.Instant value) {
      validate(fields()[4], value);
      this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
     * Checks whether the 'createdAt' field has been set.
     *
     * @return True if the 'createdAt' field has been set, false otherwise.
     */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[4];
    }


    /**
     * Clears the value of the 'createdAt' field.
     *
     * @return This builder.
     */
    public com.example.kafka.avro.model.CouponIssueRequestAvroModel.Builder clearCreatedAt() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CouponIssueRequestAvroModel build() {
      try {
        CouponIssueRequestAvroModel record = new CouponIssueRequestAvroModel();
        record.issueId = fieldSetFlags()[0] ? this.issueId : (java.lang.Long) defaultValue(fields()[0]);
        record.callerId = fieldSetFlags()[1] ? this.callerId : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.couponId = fieldSetFlags()[2] ? this.couponId : (java.lang.Long) defaultValue(fields()[2]);
        record.amount = fieldSetFlags()[3] ? this.amount : (java.lang.Long) defaultValue(fields()[3]);
        record.createdAt = fieldSetFlags()[4] ? this.createdAt : (java.time.Instant) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CouponIssueRequestAvroModel>
      WRITER$ = (org.apache.avro.io.DatumWriter<CouponIssueRequestAvroModel>) MODEL$.createDatumWriter(SCHEMA$);

  @Override
  public void writeExternal(java.io.ObjectOutput out)
      throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CouponIssueRequestAvroModel>
      READER$ = (org.apache.avro.io.DatumReader<CouponIssueRequestAvroModel>) MODEL$.createDatumReader(SCHEMA$);

  @Override
  public void readExternal(java.io.ObjectInput in)
      throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










