/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.example.kafka.avro.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class NotificationAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
    private static final long serialVersionUID = -6256562281777747672L;


    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"NotificationAvroModel\",\"namespace\":\"com.example.kafka.avro.model\",\"fields\":[{\"name\":\"userId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"notificationType\",\"type\":{\"type\":\"enum\",\"name\":\"NotificationType\",\"symbols\":[\"ORDER_APPROVED\",\"DRIVER_MATCHED\",\"ORDER_CANCELLED\",\"DRIVER_ARRIVED\"]}},{\"name\":\"message\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"orderDetails\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"OrderDetails\",\"fields\":[{\"name\":\"orderId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"totalAmount\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":10,\"scale\":2}}]}],\"default\":null},{\"name\":\"driverDetails\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DriverDetails\",\"fields\":[{\"name\":\"driverId\",\"type\":\"string\"},{\"name\":\"lat\",\"type\":\"double\"},{\"name\":\"lon\",\"type\":\"double\"}]}],\"default\":null}]}");

    public static org.apache.avro.Schema getClassSchema() {
        return SCHEMA$;
    }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.UUIDConversion());
      MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<NotificationAvroModel> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<NotificationAvroModel> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<NotificationAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<NotificationAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<NotificationAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this NotificationAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a NotificationAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a NotificationAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static NotificationAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.util.UUID userId;
    private com.example.kafka.avro.model.NotificationType notificationType;
  private java.lang.CharSequence message;
    private com.example.kafka.avro.model.OrderDetails orderDetails;
    private com.example.kafka.avro.model.DriverDetails driverDetails;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public NotificationAvroModel() {
  }

  /**
   * All-args constructor.
   * @param userId The new value for userId
   * @param notificationType The new value for notificationType
   * @param message The new value for message
   * @param orderDetails The new value for orderDetails
   * @param driverDetails The new value for driverDetails
   */
  public NotificationAvroModel(java.util.UUID userId, com.example.kafka.avro.model.NotificationType notificationType, java.lang.CharSequence message, com.example.kafka.avro.model.OrderDetails orderDetails, com.example.kafka.avro.model.DriverDetails driverDetails) {
    this.userId = userId;
      this.notificationType = notificationType;
    this.message = message;
      this.orderDetails = orderDetails;
      this.driverDetails = driverDetails;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() {
      return MODEL$;
  }

  @Override
  public org.apache.avro.Schema getSchema() {
      return SCHEMA$;
  }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
        case 0:
            return userId;
        case 1:
            return notificationType;
        case 2:
            return message;
        case 3:
            return orderDetails;
        case 4:
            return driverDetails;
        default:
            throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[]{
          new org.apache.avro.Conversions.UUIDConversion(),
          null,
          null,
          null,
          null,
          null
      };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value = "unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
        case 0:
            userId = (java.util.UUID) value$;
            break;
        case 1:
            notificationType = (com.example.kafka.avro.model.NotificationType) value$;
            break;
        case 2:
            message = (java.lang.CharSequence) value$;
            break;
        case 3:
            orderDetails = (com.example.kafka.avro.model.OrderDetails) value$;
            break;
        case 4:
            driverDetails = (com.example.kafka.avro.model.DriverDetails) value$;
            break;
        default:
            throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'userId' field.
   * @return The value of the 'userId' field.
   */
  public java.util.UUID getUserId() {
    return userId;
  }


  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(java.util.UUID value) {
    this.userId = value;
  }

    /**
     * Gets the value of the 'notificationType' field.
     *
     * @return The value of the 'notificationType' field.
     */
    public com.example.kafka.avro.model.NotificationType getNotificationType() {
        return notificationType;
    }


    /**
     * Sets the value of the 'notificationType' field.
     *
     * @param value the value to set.
     */
    public void setNotificationType(com.example.kafka.avro.model.NotificationType value) {
        this.notificationType = value;
    }

  /**
   * Gets the value of the 'message' field.
   * @return The value of the 'message' field.
   */
  public java.lang.CharSequence getMessage() {
    return message;
  }


  /**
   * Sets the value of the 'message' field.
   * @param value the value to set.
   */
  public void setMessage(java.lang.CharSequence value) {
      this.message = value;
  }

    /**
     * Gets the value of the 'orderDetails' field.
     *
     * @return The value of the 'orderDetails' field.
     */
    public com.example.kafka.avro.model.OrderDetails getOrderDetails() {
        return orderDetails;
    }


    /**
     * Sets the value of the 'orderDetails' field.
     *
     * @param value the value to set.
     */
    public void setOrderDetails(com.example.kafka.avro.model.OrderDetails value) {
        this.orderDetails = value;
    }

    /**
     * Gets the value of the 'driverDetails' field.
     *
     * @return The value of the 'driverDetails' field.
     */
    public com.example.kafka.avro.model.DriverDetails getDriverDetails() {
        return driverDetails;
    }


    /**
     * Sets the value of the 'driverDetails' field.
     *
     * @param value the value to set.
     */
    public void setDriverDetails(com.example.kafka.avro.model.DriverDetails value) {
        this.driverDetails = value;
  }

  /**
   * Creates a new NotificationAvroModel RecordBuilder.
   * @return A new NotificationAvroModel RecordBuilder
   */
  public static com.example.kafka.avro.model.NotificationAvroModel.Builder newBuilder() {
    return new com.example.kafka.avro.model.NotificationAvroModel.Builder();
  }

  /**
   * Creates a new NotificationAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new NotificationAvroModel RecordBuilder
   */
  public static com.example.kafka.avro.model.NotificationAvroModel.Builder newBuilder(com.example.kafka.avro.model.NotificationAvroModel.Builder other) {
    if (other == null) {
      return new com.example.kafka.avro.model.NotificationAvroModel.Builder();
    } else {
      return new com.example.kafka.avro.model.NotificationAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new NotificationAvroModel RecordBuilder by copying an existing NotificationAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new NotificationAvroModel RecordBuilder
   */
  public static com.example.kafka.avro.model.NotificationAvroModel.Builder newBuilder(com.example.kafka.avro.model.NotificationAvroModel other) {
    if (other == null) {
      return new com.example.kafka.avro.model.NotificationAvroModel.Builder();
    } else {
      return new com.example.kafka.avro.model.NotificationAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for NotificationAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<NotificationAvroModel>
    implements org.apache.avro.data.RecordBuilder<NotificationAvroModel> {

      private java.util.UUID userId;
    private com.example.kafka.avro.model.NotificationType notificationType;
      private java.lang.CharSequence message;
      private com.example.kafka.avro.model.OrderDetails orderDetails;
      private com.example.kafka.avro.model.OrderDetails.Builder orderDetailsBuilder;
      private com.example.kafka.avro.model.DriverDetails driverDetails;
      private com.example.kafka.avro.model.DriverDetails.Builder driverDetailsBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.example.kafka.avro.model.NotificationAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.userId)) {
        this.userId = data().deepCopy(fields()[0].schema(), other.userId);
          fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
        if (isValidValue(fields()[1], other.notificationType)) {
            this.notificationType = data().deepCopy(fields()[1].schema(), other.notificationType);
            fieldSetFlags()[1] = other.fieldSetFlags()[1];
        }
        if (isValidValue(fields()[2], other.message)) {
            this.message = data().deepCopy(fields()[2].schema(), other.message);
            fieldSetFlags()[2] = other.fieldSetFlags()[2];
        }
        if (isValidValue(fields()[3], other.orderDetails)) {
            this.orderDetails = data().deepCopy(fields()[3].schema(), other.orderDetails);
            fieldSetFlags()[3] = other.fieldSetFlags()[3];
        }
        if (other.hasOrderDetailsBuilder()) {
            this.orderDetailsBuilder = com.example.kafka.avro.model.OrderDetails.newBuilder(other.getOrderDetailsBuilder());
        }
        if (isValidValue(fields()[4], other.driverDetails)) {
            this.driverDetails = data().deepCopy(fields()[4].schema(), other.driverDetails);
            fieldSetFlags()[4] = other.fieldSetFlags()[4];
        }
        if (other.hasDriverDetailsBuilder()) {
            this.driverDetailsBuilder = com.example.kafka.avro.model.DriverDetails.newBuilder(other.getDriverDetailsBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing NotificationAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(com.example.kafka.avro.model.NotificationAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.userId)) {
        this.userId = data().deepCopy(fields()[0].schema(), other.userId);
          fieldSetFlags()[0] = true;
      }
        if (isValidValue(fields()[1], other.notificationType)) {
            this.notificationType = data().deepCopy(fields()[1].schema(), other.notificationType);
            fieldSetFlags()[1] = true;
        }
        if (isValidValue(fields()[2], other.message)) {
            this.message = data().deepCopy(fields()[2].schema(), other.message);
            fieldSetFlags()[2] = true;
        }
        if (isValidValue(fields()[3], other.orderDetails)) {
            this.orderDetails = data().deepCopy(fields()[3].schema(), other.orderDetails);
            fieldSetFlags()[3] = true;
        }
        this.orderDetailsBuilder = null;
        if (isValidValue(fields()[4], other.driverDetails)) {
            this.driverDetails = data().deepCopy(fields()[4].schema(), other.driverDetails);
            fieldSetFlags()[4] = true;
        }
        this.driverDetailsBuilder = null;
    }

      /**
       * Gets the value of the 'userId' field.
      * @return The value.
      */
      public java.util.UUID getUserId() {
          return userId;
      }


      /**
       * Sets the value of the 'userId' field.
       * @param value The value of 'userId'.
      * @return This builder.
      */
    public com.example.kafka.avro.model.NotificationAvroModel.Builder setUserId(java.util.UUID value) {
      validate(fields()[0], value);
      this.userId = value;
        fieldSetFlags()[0] = true;
        return this;
    }

      /**
       * Checks whether the 'userId' field has been set.
       * @return True if the 'userId' field has been set, false otherwise.
      */
      public boolean hasUserId() {
          return fieldSetFlags()[0];
      }


      /**
       * Clears the value of the 'userId' field.
      * @return This builder.
      */
    public com.example.kafka.avro.model.NotificationAvroModel.Builder clearUserId() {
        userId = null;
        fieldSetFlags()[0] = false;
        return this;
    }

      /**
       * Gets the value of the 'notificationType' field.
       *
       * @return The value.
       */
      public com.example.kafka.avro.model.NotificationType getNotificationType() {
          return notificationType;
      }


      /**
       * Sets the value of the 'notificationType' field.
       *
       * @param value The value of 'notificationType'.
       * @return This builder.
       */
      public com.example.kafka.avro.model.NotificationAvroModel.Builder setNotificationType(com.example.kafka.avro.model.NotificationType value) {
          validate(fields()[1], value);
          this.notificationType = value;
          fieldSetFlags()[1] = true;
          return this;
      }

      /**
       * Checks whether the 'notificationType' field has been set.
       *
       * @return True if the 'notificationType' field has been set, false otherwise.
       */
      public boolean hasNotificationType() {
          return fieldSetFlags()[1];
      }


      /**
       * Clears the value of the 'notificationType' field.
       *
       * @return This builder.
       */
      public com.example.kafka.avro.model.NotificationAvroModel.Builder clearNotificationType() {
          notificationType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'message' field.
     * @return The value.
     */
    public java.lang.CharSequence getMessage() {
        return message;
    }


    /**
      * Sets the value of the 'message' field.
      * @param value The value of 'message'.
     * @return This builder.
      */
    public com.example.kafka.avro.model.NotificationAvroModel.Builder setMessage(java.lang.CharSequence value) {
        validate(fields()[2], value);
        this.message = value;
        fieldSetFlags()[2] = true;
        return this;
    }

    /**
      * Checks whether the 'message' field has been set.
     * @return True if the 'message' field has been set, false otherwise.
     */
    public boolean hasMessage() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'message' field.
     * @return This builder.
     */
    public com.example.kafka.avro.model.NotificationAvroModel.Builder clearMessage() {
        message = null;
        fieldSetFlags()[2] = false;
        return this;
    }

      /**
       * Gets the value of the 'orderDetails' field.
       *
       * @return The value.
       */
      public com.example.kafka.avro.model.OrderDetails getOrderDetails() {
          return orderDetails;
      }


      /**
       * Sets the value of the 'orderDetails' field.
       *
       * @param value The value of 'orderDetails'.
       * @return This builder.
       */
      public com.example.kafka.avro.model.NotificationAvroModel.Builder setOrderDetails(com.example.kafka.avro.model.OrderDetails value) {
          validate(fields()[3], value);
          this.orderDetailsBuilder = null;
          this.orderDetails = value;
          fieldSetFlags()[3] = true;
          return this;
      }

      /**
       * Checks whether the 'orderDetails' field has been set.
       *
       * @return True if the 'orderDetails' field has been set, false otherwise.
       */
      public boolean hasOrderDetails() {
          return fieldSetFlags()[3];
      }

      /**
       * Gets the Builder instance for the 'orderDetails' field and creates one if it doesn't exist yet.
       *
       * @return This builder.
       */
      public com.example.kafka.avro.model.OrderDetails.Builder getOrderDetailsBuilder() {
          if (orderDetailsBuilder == null) {
              if (hasOrderDetails()) {
                  setOrderDetailsBuilder(com.example.kafka.avro.model.OrderDetails.newBuilder(orderDetails));
              } else {
                  setOrderDetailsBuilder(com.example.kafka.avro.model.OrderDetails.newBuilder());
              }
          }
          return orderDetailsBuilder;
      }

      /**
       * Sets the Builder instance for the 'orderDetails' field
       *
       * @param value The builder instance that must be set.
       * @return This builder.
       */

      public com.example.kafka.avro.model.NotificationAvroModel.Builder setOrderDetailsBuilder(com.example.kafka.avro.model.OrderDetails.Builder value) {
          clearOrderDetails();
          orderDetailsBuilder = value;
          return this;
      }

      /**
       * Checks whether the 'orderDetails' field has an active Builder instance
       *
       * @return True if the 'orderDetails' field has an active Builder instance
       */
      public boolean hasOrderDetailsBuilder() {
          return orderDetailsBuilder != null;
      }

      /**
       * Clears the value of the 'orderDetails' field.
       *
       * @return This builder.
       */
      public com.example.kafka.avro.model.NotificationAvroModel.Builder clearOrderDetails() {
          orderDetails = null;
          orderDetailsBuilder = null;
          fieldSetFlags()[3] = false;
          return this;
      }

      /**
       * Gets the value of the 'driverDetails' field.
       *
       * @return The value.
       */
      public com.example.kafka.avro.model.DriverDetails getDriverDetails() {
          return driverDetails;
      }


      /**
       * Sets the value of the 'driverDetails' field.
       *
       * @param value The value of 'driverDetails'.
       * @return This builder.
       */
      public com.example.kafka.avro.model.NotificationAvroModel.Builder setDriverDetails(com.example.kafka.avro.model.DriverDetails value) {
          validate(fields()[4], value);
          this.driverDetailsBuilder = null;
          this.driverDetails = value;
          fieldSetFlags()[4] = true;
          return this;
      }

      /**
       * Checks whether the 'driverDetails' field has been set.
       *
       * @return True if the 'driverDetails' field has been set, false otherwise.
       */
      public boolean hasDriverDetails() {
          return fieldSetFlags()[4];
      }

      /**
       * Gets the Builder instance for the 'driverDetails' field and creates one if it doesn't exist yet.
       *
       * @return This builder.
       */
      public com.example.kafka.avro.model.DriverDetails.Builder getDriverDetailsBuilder() {
          if (driverDetailsBuilder == null) {
              if (hasDriverDetails()) {
                  setDriverDetailsBuilder(com.example.kafka.avro.model.DriverDetails.newBuilder(driverDetails));
              } else {
                  setDriverDetailsBuilder(com.example.kafka.avro.model.DriverDetails.newBuilder());
              }
          }
          return driverDetailsBuilder;
      }

      /**
       * Sets the Builder instance for the 'driverDetails' field
       *
       * @param value The builder instance that must be set.
       * @return This builder.
       */

      public com.example.kafka.avro.model.NotificationAvroModel.Builder setDriverDetailsBuilder(com.example.kafka.avro.model.DriverDetails.Builder value) {
          clearDriverDetails();
          driverDetailsBuilder = value;
          return this;
      }

      /**
       * Checks whether the 'driverDetails' field has an active Builder instance
       *
       * @return True if the 'driverDetails' field has an active Builder instance
       */
      public boolean hasDriverDetailsBuilder() {
          return driverDetailsBuilder != null;
      }

      /**
       * Clears the value of the 'driverDetails' field.
       *
       * @return This builder.
       */
      public com.example.kafka.avro.model.NotificationAvroModel.Builder clearDriverDetails() {
          driverDetails = null;
          driverDetailsBuilder = null;
          fieldSetFlags()[4] = false;
          return this;
      }

      @Override
      @SuppressWarnings("unchecked")
      public NotificationAvroModel build() {
          try {
              NotificationAvroModel record = new NotificationAvroModel();
              record.userId = fieldSetFlags()[0] ? this.userId : (java.util.UUID) defaultValue(fields()[0]);
              record.notificationType = fieldSetFlags()[1] ? this.notificationType : (com.example.kafka.avro.model.NotificationType) defaultValue(fields()[1]);
              record.message = fieldSetFlags()[2] ? this.message : (java.lang.CharSequence) defaultValue(fields()[2]);
              if (orderDetailsBuilder != null) {
                  try {
                      record.orderDetails = this.orderDetailsBuilder.build();
                  } catch (org.apache.avro.AvroMissingFieldException e) {
                      e.addParentField(record.getSchema().getField("orderDetails"));
                      throw e;
                  }
              } else {
                  record.orderDetails = fieldSetFlags()[3] ? this.orderDetails : (com.example.kafka.avro.model.OrderDetails) defaultValue(fields()[3]);
              }
              if (driverDetailsBuilder != null) {
          try {
            record.driverDetails = this.driverDetailsBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("driverDetails"));
            throw e;
          }
        } else {
          record.driverDetails = fieldSetFlags()[4] ? this.driverDetails : (com.example.kafka.avro.model.DriverDetails) defaultValue(fields()[4]);
              }
              return record;
          } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<NotificationAvroModel>
      WRITER$ = (org.apache.avro.io.DatumWriter<NotificationAvroModel>) MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<NotificationAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<NotificationAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










