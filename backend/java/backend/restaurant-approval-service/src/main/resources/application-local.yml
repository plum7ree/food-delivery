server:
  port: 8076


logging:
  level:
    org.springframework.context: DEBUG
    com.example: DEBUG

spring:
  application:
    name: restaurant-approval-service
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration # We don't need a datasource yet

  cloud:
    function:
      definition: processor
    stream:
      default:
        producer:
          useNativeEncoding: true
      bindings:
        processor-in-0:
          destination: restaurant-approval-request
          group: restaurant-approval-group
        processor-out-0:
          destination: restaurant-approval-request

      kafka:
        binder:
          requiredAcks: all
          brokers: localhost:19092,localhost:29092,localhost:39092
          auto-create-topics: true
          consumer-properties:
            "value.deserializer": io.confluent.kafka.serializers.KafkaAvroDeserializer
            "key.deserializer": org.apache.kafka.common.serialization.StringDeserializer
            schema.registry.url: http://localhost:8081
          producer-properties:
            "value.serializer": io.confluent.kafka.serializers.KafkaAvroSerializer
            "key.serializer": org.apache.kafka.common.serialization.StringSerializer
            schema.registry.url: http://localhost:8081
        bindings:
          processor-in-0:
            consumer:
              configuration:
                isolation.level: read_committed
                "auto.offset.reset": "earliest" # 최근 n 개의 메시지를 가져오기 위해 사용
                "enable.auto.commit": false


