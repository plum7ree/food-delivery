

driver:
  message: "Please Contact this phone number for QA support"
  contactDetails:
    name: "x"
    email: "x@company.com"
  onCallSupport:
    - (123) 456-789
    - (987) 654-321
    -
redis:
  driver-location:
    key: "driver:%s"
    fields:
      location:
        edge: "location:edge" # key(driver:{driverId}), field(location:edge), value(edgeId)
        coord: "location:coord"
  edge-count: #TODO move into seperate .yml
    key: "edge:%s"
    fields:
      count: "count" # key(edge:{edgeId}), field(count), value(count)


retry-config:
  initial-interval-ms: 1000
  max-interval-ms: 10000
  multiplier: 2.0
  maxAttempts: 3
  sleep-time-ms: 2000

kafka-config:
  bootstrap-servers: localhost:19092, localhost:29092, localhost:39092
  schema-registry-url-key: schema.registry.url
  schema-registry-url: http://localhost:8081
  topic-name: location-topic
  topic-names-to-create:
    - location-topic
    - location-analytics-topic
  num-of-partitions: 3
  replication-factor: 3



kafka-consumer-config:
  key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
  consumer-group-id: location-topic
  auto-offset-reset: earliest
  specific-avro-reader-key: specific.avro.reader
  specific-avro-reader: true
  batch-listener: true
  auto-startup: false
  concurrency-level: 3
  session-timeout-ms: 10000
  heartbeat-interval-ms: 3000
  max-poll-interval-ms: 300000
  max-poll-records: 500
  max-partition-fetch-bytes-default: 1048576
  max-partition-fetch-bytes-boost-factor: 1
  poll-timeout-ms: 150


spring:
  data:
    redis-server: redis://localhost:6379
