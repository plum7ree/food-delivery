server:
  #TODO do we need to unify this into 8080 in docker environment?
  port: 8091



spring:
  application:
    name: "monitoring"
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration # We don't need a datasource yet
  config:
    import: "optional:configserver:http://localhost:8071/" # For default and 'native' profile, config will be fetched from config server
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true

# spring-boot-starter-actuator
# application monitoring
management:
  # spring boot 2.x ???? ??. ? ??? ???
  endpoints:
    web:
      exposure:
        include: "*" # health, info, ...
  health:
    readiness-state: # Exposes the ?Readiness? application availability state.
      enabled: true
    liveness-state: # Exposes the ?Liveness? application availability state.
      enabled: true
  endpoint:
    shutdown: # enable shutdown application
      enabled: true
    heath:
      probes:
        # provide information about their internal state with Container Probes.
        # https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html#actuator.endpoints.kubernetes-probes
        # not only kubernetes, any environment.
        enabled: true
  info: # https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html#actuator.endpoints.info.auto-configured-info-contributors
    env: # Exposes any property from the Environment whose name starts with info..
      enabled: true
  metrics: # https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html#actuator.metrics.customizing.common-tags
    tags:
      application: ${spring.application.name}

eureka:
  instance:
    # https://cloud.spring.io/spring-cloud-netflix/multi/multi_spring-cloud-eureka-server.html#spring-cloud-eureka-server-prefer-ip-address
    # if we want ip address more than host name.
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/


